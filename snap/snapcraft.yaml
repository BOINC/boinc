# This file is part of BOINC.
# https://boinc.berkeley.edu
# Copyright (C) 2025 University of California
#
# BOINC is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation,
# either version 3 of the License, or (at your option) any later version.
#
# BOINC is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with BOINC.  If not, see <http://www.gnu.org/licenses/>.

name: boinc
base: core24
version: "8.3.0"
type: app
title: BOINC Manager
summary: BOINC lets you help cutting-edge science research using your computer.
description: |
  BOINC lets you help cutting-edge science research using your computer. The BOINC app, running on your computer, downloads scientific computing jobs and runs them invisibly in the background. It's easy and safe.
  About 30 science projects use BOINC. They investigate diseases, study climate change, discover pulsars, and do many other types of scientific research.
  The BOINC and Science United projects are located at the University of California, Berkeley and are supported by the National Science Foundation.
icon: snap/gui/boinc.png
issues: https://github.com/BOINC/boinc/issues
license: LGPL-3.0-or-later
source-code: https://github.com/BOINC/boinc
website: https://boinc.berkeley.edu/
grade: stable
confinement: strict

platforms:
  amd64:
    build-on: amd64
    build-for: amd64
  arm64:
    build-on: amd64
    build-for: arm64

apps:
  boinc:
    command: usr/bin/boinc --dir $HOME
    plugs:
    - network
    - network-bind

  client:
    command: usr/bin/boinc --dir $HOME
    plugs:
    - network
    - network-bind

  manager:
    command: usr/bin/boincmgr --datadir $HOME
    plugs:
    - network
    - network-bind
    extensions:
    - gnome
    slots:
    - dbus-daemon
    common-id: boinc.manager
    environment:
      XAUTHORITY: $SNAP_REAL_HOME/.Xauthority

slots:
  dbus-daemon:
    interface: dbus
    bus: session
    name: boinc.manager

parts:
  boinc:
    build-packages:
    - autopoint
    - build-essential
    - pkg-config
    - tar
    - curl
    - zip
    - unzip
    - git
    - bison
    - software-properties-common
    - cmake
    - dbus
    - gcc-aarch64-linux-gnu
    - g++-aarch64-linux-gnu
    - binutils-aarch64-linux-gnu
    source: .
    plugin: autotools
    build-environment:
    - CRYPTOGRAPHY_DONT_BUILD_RUST: "1"
    - triplet: snap-linux-$SNAPCRAFT_TARGET_ARCH
    - VCPKG_DIR: "$PWD/3rdParty/linux/vcpkg/installed/$triplet"
    - _libcurl_pc: "$VCPKG_DIR/lib/pkgconfig/libcurl.pc"
    - VCPKG_BINARY_SOURCES: "$VCPKG_BINARY_SOURCES"
    - AWS_ACCESS_KEY_ID: "$AWS_ACCESS_KEY_ID"
    - AWS_SECRET_ACCESS_KEY: "$AWS_SECRET_ACCESS_KEY"
    - AWS_DEFAULT_REGION: "$AWS_DEFAULT_REGION"
    - prefix: /usr
    - PKG_CONFIG_PATH: $VCPKG_DIR/lib/pkgconfig/
    autotools-configure-parameters:
    - --prefix=$prefix
    - --with-libcurl=$VCPKG_DIR
    - --with-ssl=$VCPKG_DIR
    - --with-wx-config=$VCPKG_DIR/tools/wxwidgets/wx-config
    - --enable-client
    - --enable-manager
    - --disable-server
    - GTK_LIBS="`pkg-config --libs gtk+-3.0`"
    override-build: |
      echo ARCH=$SNAPCRAFT_TARGET_ARCH

      export PATH=/snap/cmake/current/bin/:$PATH
      cmake --version

      ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime
      snap install aws-cli --classic
      aws --version

      export PATh=$HOME/.local/bin:$PATH
      pip install -U --user pip
      pip install --user jinja2

      linux/update_vcpkg_manager.sh $triplet
      if [ "$SNAPCRAFT_TARGET_ARCH" = "arm64" ]; then
        export CC=aarch64-linux-gnu-gcc
        export CXX=aarch64-linux-gnu-g++
        export LD=aarch64-linux-gnu-ld
        export CFLAGS="-march=armv8-a -O3"
        export CXXFLAGS="-march=armv8-a -O3 -std=c++11"
        export CPPFLAGS="-I$VCPKG_DIR/include"
        export LDFLAGS="-march=armv8-a -static-libstdc++ -s"
      fi

      ./_autosetup
      snapcraftctl build
